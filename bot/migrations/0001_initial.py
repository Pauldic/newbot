# Generated by Django 2.0.2 on 2018-05-15 07:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('username', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('access_hash', models.CharField(max_length=64)),
                ('creator', models.BooleanField(default=False)),
                ('update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('private', 'Private'), ('group', 'Group'), ('supergroup', 'Super Group'), ('channel', 'Channel')], max_length=128)),
                ('title', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('username', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('first_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('last_name', models.CharField(blank=True, default=None, help_text='First name of the other party in a private chat', max_length=128, null=True)),
                ('all_members_are_administrators', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('invite_link', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('sticker_set_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('can_set_sticker_set', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ChatPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_file_id', models.CharField(max_length=32)),
                ('big_file_id', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=64)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('username', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('access_hash', models.CharField(max_length=64)),
                ('update', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=32)),
                ('sell_value', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('sell_percent', models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ('buy_value', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('buy_percent', models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ('now_value', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('now_percent', models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ('stop_value', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('stop_percent', models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ('reward', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('done', models.CharField(choices=[('Not Treated', 'Not Treated'), ('Treated', 'Treated'), ('Failed Attempt', 'Failed Attempt')], default='Not Treated', max_length=16)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Channel')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=64)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('username', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('access_hash', models.CharField(max_length=64)),
                ('update', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Defaulter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EngagementRule',
            fields=[
                ('type', models.CharField(choices=[('Text', 'Text'), ('Photo', 'Photo'), ('Audio', 'Audio'), ('Video', 'Video'), ('Others', 'Others')], max_length=16, primary_key=True, serialize=False)),
                ('is_allowed', models.BooleanField(default=True)),
                ('keywords', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('regex', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('is_rate_limited', models.BooleanField(default=True)),
                ('rate_counter', models.IntegerField(default=0)),
                ('rate_interval', models.IntegerField(default=0, help_text='Time in seconds')),
                ('action', models.CharField(blank=True, choices=[('Readonly', 'Readonly'), ('Kick', 'Kick')], default=None, max_length=16, null=True)),
                ('limit_time', models.IntegerField(default=0, help_text='Time in minuets')),
                ('can_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('username', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('type', models.CharField(max_length=64)),
                ('link', models.URLField(blank=True, default=None, max_length=128, null=True)),
                ('category', models.IntegerField(blank=True, default=5, null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IDefaulter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Leech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=32, unique=True)),
                ('point', models.IntegerField(unique=True)),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('point',),
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.BigIntegerField()),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('username', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('type', models.CharField(choices=[('Editor', 'Editor'), ('Member', 'Member')], default=(('Editor', 'Editor'), ('Member', 'Member')), max_length=16)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Restricted', 'Restricted'), ('Kicked', 'Kicked'), ('Joined', 'Joined'), ('Left', 'Left')], default='Active', max_length=16)),
                ('language_code', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('point', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('batch_id', models.UUIDField(blank=True, default=None, null=True)),
                ('subscribed', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.Group')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_id', models.BigIntegerField(blank=True, default=None, null=True)),
                ('message_id', models.IntegerField()),
                ('source', models.CharField(blank=True, choices=[('Private', 'Private'), ('Group', 'Group'), ('Channel', 'Channel')], default=None, max_length=128, null=True)),
                ('source_id', models.BigIntegerField()),
                ('text', models.TextField(blank=True, default=None, null=True)),
                ('type', models.CharField(choices=[('Text', 'Text'), ('Photo', 'Photo'), ('Audio', 'Audio'), ('Video', 'Video'), ('Others', 'Others')], max_length=16)),
                ('date', models.DateTimeField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('for_id', models.BigIntegerField()),
                ('treated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MessageEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('offset', models.IntegerField()),
                ('length', models.IntegerField()),
                ('url', models.URLField(blank=True, default=None, null=True)),
                ('member', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.Member')),
            ],
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('Welcome', 'Welcome')], default=None, max_length=16, null=True)),
                ('text', models.TextField(blank=True, default=None, help_text='\n        Avaiable Templates are: <br>\n            {{first_name}}:  Paul <br>\n            {{username}}:  paul_username <br>\n            {{first_name_username}}:  Paul - paul_username <br>\n            {{username_first_name}}:  paul_username - Paul\n    ', null=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.Group')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('author', models.CharField(max_length=256)),
                ('source', models.URLField(blank=True, default=None, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Rejected', 'Rejected'), ('Accepted', 'Accepted'), ('Discarded', 'Discarded'), ('Sent', 'Sent'), ('Cancelled', 'Cancelled')], default='Pending', max_length=16)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('sent_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('score_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoSize',
            fields=[
                ('file_id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('file_size', models.IntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Editor', 'Editor'), ('Member', 'Member')], max_length=16)),
                ('accepted', models.BooleanField()),
                ('late', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bot.Member')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bot.News')),
            ],
        ),
        migrations.CreateModel(
            name='Result_Coin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=32)),
                ('coin_name', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=32)),
                ('percent', models.DecimalField(decimal_places=8, default=0, max_digits=11)),
                ('time', models.IntegerField(blank=True, default=0, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Channel')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Setup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_review_time_editor', models.IntegerField(help_text='Maximum time in minutes before news is sent out/trashed', verbose_name='Max review-time (Editor)')),
                ('max_review_time_user', models.IntegerField(help_text='Maximum time in minutes (from the time the News was sent out) before editors are scored', verbose_name='Max review-time (User)')),
                ('review_threshold_editor', models.IntegerField(help_text='Min review (%) before news is sent out/trashed', verbose_name='Review threshold (Editor)')),
                ('review_threshold_user', models.IntegerField(help_text='Min +ve review (%) before editor is scored +ve/-ve', verbose_name='Review threshold (User)')),
                ('positive_reward_point', models.IntegerField(help_text='Value awarded for passed review', verbose_name='Positive Score point')),
                ('negative_reward_point', models.IntegerField(help_text='Value deducted for failed review', verbose_name='Negative Score point')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('verified', models.BooleanField(default=False)),
                ('bot_chat_history', models.BooleanField(default=False)),
                ('bot_inline_geo', models.BooleanField(default=False)),
                ('bot', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('restricted', models.BooleanField(default=False)),
                ('phone', models.CharField(max_length=32)),
                ('access_hash', models.CharField(max_length=128)),
                ('contact', models.BooleanField(default=False)),
                ('restriction_reason', models.CharField(max_length=128)),
                ('deleted', models.BooleanField(default=False)),
                ('mutual_contact', models.BooleanField(default=False)),
                ('bot_inline_placeholder', models.CharField(max_length=128)),
                ('is_self', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('lang_code', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('min', models.BooleanField(default=False)),
                ('bot_info_version', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('photo', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('bot_nochats', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Message')),
            ],
        ),
        migrations.AddField(
            model_name='leech',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Member'),
        ),
        migrations.AddField(
            model_name='idefaulter',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Member'),
        ),
        migrations.AddField(
            model_name='defaulter',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Group'),
        ),
        migrations.AddField(
            model_name='defaulter',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Member'),
        ),
        migrations.AddField(
            model_name='chat',
            name='photo',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.ChatPhoto'),
        ),
        migrations.AddField(
            model_name='chat',
            name='pinned_message',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pinned_message', to='bot.Message'),
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('member_id', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='leech',
            unique_together={('member', 'group')},
        ),
    ]
